@charset "UTF-8";
/*definission : Une variable Sass est un conteneur pour une valeur. L’idée est de lier un nom à une valeur 
puis d’utiliser ensuite ce nom à la place de la valeur dans le code. 
Le nom utilisé sera ensuite converti automatiquement en la valeur à laquelle il est lié.
 Cela permet une plus grande clarté dans le code et une bien meilleure maintenabilité 
 puisque si on souhaite changer la valeur en question il suffit de la faire une fois à l’endroit où on l’a lié au nom.
Les variables Sass sont très simple d’utilisation : 
il suffit d’utiliser un signe $ (dollar) suivi d’un nom pour déclarer (c’est-à-dire créer) une variable
 et d’affecter une valeur à ce nom en séparant le nom de la valeur par le signe : (deux-points).*/
/*variables*****/
/*Chaque itération à travers la boucle produira un nouveau sélecteur, 
avec le numéro d'index de l'itération utilisé dans son nom, ainsi que pour multiplier le 
 $anim-delay  et créer un délai de lancement qui sera incrémenté au fur et à mesure. 
 $anim-delay  est réglé sur la durée de l'animation divisée par le nombre de barres.*/
/* PAGE */
/* KEYFRAMES */
/* KEYFRAMES (l'ecran de chargement): Si une liste d'étapes ne spécifie pas le début (0%/from) ou la fin (100%/to) 
d'une animation, le navigateur va utiliser les styles de l'élement définis par ailleurs.
Seules les propriétés qui sont définies sur les étapes de début (0%) et de fin (100%) seront animées.*/
@keyframes loadscreen {
  /*from :Indique le point de départ de l'animation (correspond à un avancement de 0%).*/
  from {
    opacity: 1;
    transform: rotate(0deg);
  }
  /*to :Indique la fin de l'animation (correspond à un avancement de 100%).*/
  to {
    opacity: 0;
    visibility: hidden;
    transform: rotate(360deg);
  }
}
/*utilisons la fonction de transformation  scaleY()  pour animer l'échelle verticale de ces 
barres dans le temps, en commençant à 0 % et en terminant à 100 % :*/
@keyframes bars {
  0% {
    transform: scaleY(0.5);
    /**opacity :définit la transparence d'un élément. Autrement dit, elle permet de définir 
      le degré de visibilité de l'arrière-plan sur lequel est placé l'élément.*/
    opacity: 0.7;
  }
  100% {
    transform: scaleY(1);
    opacity: 1;
  }
}
@keyframes new {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
/* KEYFRAMES */
/*on remarque que les sélecteurs a,et li sont imbriqués à l'intérieur du body. 
C'est un excellent moyen d'organiser notre CSS et de le rendre plus  lisible.
*Sass: nous permettra d'imbriquer nos sélecteurs CSS d'une manière qui suit la même 
hiérarchie visuelle que notre HTML */
body {
  font-family: "Roboto", sans-serif;
  margin: 0px auto;
}
body a {
  cursor: pointer;
  text-decoration: none;
  color: black;
}
body li {
  list-style-type: none;
}

/* <input> de type checkbox sont affichés sous la forme de boîtes à cocher qui sont cochées lorsqu'elles sont activées.*/
input[type=checkbox] {
  display: none;
}

.Roboto_bold {
  font-family: "Roboto", sans-serif;
}

.Roboto_light {
  font-family: "Roboto", sans-serif;
}

.center {
  min-width: 300px;
  margin: auto;
}

/* -------------LOADER------------------------------------ */
.loader {
  background: rgba(255, 255, 255, 0.85);
  position: fixed;
  top: 0;
  height: 100%;
  width: 100%;
  /*le z-index détermine l'ordre des différentes couches que formeront les éléments. Généralement,
  un élément couvrira un autre élément si sa valeur de z-index est supérieure à celle du deuxième élément.*/
  z-index: 100;
  animation: loadscreen 1s 4s forwards;
}

.load {
  position: absolute;
  top: 50%;
  left: 50%;
  /*translate() permet de déplacer un élément sur le plan représenté par le document.*/
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: space-around;
  /*configuratin des dimensions pour les barre*/
  width: 20vh;
  height: 15vh;
}
.load_bar {
  width: 3vh;
  height: 100%;
  border-radius: 20px;
  /*Bien sûr, pour que nos keyframes aient un effet sur nos barres et commencent à animer leur échelle,
   nous devons d'abord les appliquer au sélecteur .bars 
  Alors configurons une animation à l'aide de @keyframes bars et une durée de 800 ms
  La variable  $anim-dur  correspond à la durée de notre animation. */
  animation: bars 800ms backwards infinite;
  /*Réglons donc le mode  animation-fill-mode  sur backwards pour
   étendre les valeurs de départ de l'animation pendant le délai et
   dire au navigateur de lire l'animation à l'infini en lui assignant le mot clé « infinite »*/
  animation-direction: alternate;
  /* boucles permettent de répéter une instruction autant de fois que on le souhaite.
  Configurons une boucle Sass @for pour l'itération à travers un ensemble de nombres allant de un à cinq, 
  en incrémentant le nom du sélecteur et le délai de l'animation :*/
}
.load_bar--1 {
  animation-delay: 160ms;
}
.load_bar--2 {
  animation-delay: 320ms;
}
.load_bar--3 {
  animation-delay: 480ms;
}
.load_bar--4 {
  animation-delay: 640ms;
}
.load_bar--5 {
  animation-delay: 800ms;
}
.load_bar-1 {
  background: #9356dc;
}
.load_bar-2 {
  background: #FF79DA;
}
.load_bar-3 {
  background: #99E2D0;
}
.load_bar-4 {
  background: #48df5c;
}
.load_bar-5 {
  background: #e412c1;
}

/* -------------------fin LOADER------------------------------------- */
/* --code HEADER ----------------------------------------------------- */
.header {
  position: fixed;
  top: 0;
  z-index: 50;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: white;
  box-shadow: 5px 0px 20px rgb(167, 167, 167);
}
.header_logo {
  margin: auto;
  width: 200px;
  padding: 15px 0px 15px 0px;
}

/* --fin code HEADER -----------------------------------------------------*/
/* --  code LOCATION (barre de recherche) --------------------------------------- */
.location_search {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 65px;
  padding: 5px;
  background-color: #dedcdc;
}
.location_search_icon {
  font-size: 22px;
  margin-right: 20px;
}
.location_search input {
  border: none;
  background-color: #dedcdc;
  height: 55px;
  width: 165px;
  font-size: 22px;
  /*placeholder :Cela permet de personnaliser l'apparence de ce texte.*/
}
.location_search input::placeholder {
  opacity: 1;
  color: black;
  font-family: "Roboto";
  font-size: 22px;
}
.location_search_searchInput:focus {
  outline-color: #9356DC;
}

i.fa-solid.location_icon {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: 10px;
}

/* -- fin code LOCATION (barre de recherche) ---------------------------------------*/
/* --  code EXPLORER -------------------------------- */
.explorer {
  background-color: rgba(220, 220, 220, 0.3843137255);
  background-size: cover;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 50px 5px 40px 5px;
}
.explorer_title {
  font-size: 29px;
  margin: 10px 5px;
}
.explorer_subtitle {
  font-size: 20px;
}
.explorer_link {
  width: 284px;
  height: 66px;
  font-size: 20px;
}

/*bouttan (commander)*/
.btn_main {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 30px;
  color: white;
  background: linear-gradient(#FF79DA, #9356DC);
  border-radius: 40px;
  box-shadow: 2px 5px 20px rgb(167, 167, 167);
}
.btn_main:hover {
  /*Application de la luminosité à l'aide de la propriété filter
  Le CSS applique une valeur de multiplicateur linéaire sur un élément ou une image d'entrée, 
  rendant l'image plus claire ou plus sombre.brightness()*/
  filter: brightness(1.1);
  box-shadow: 3px 6px 20px rgb(137, 137, 137);
}

/* -- fin code EXPLORER -------------------------------- */
/*--code OPERATION (Fonctionnement)-------------------------------------*/
.operation {
  padding: 30px 15px;
}
.operation_header {
  font-size: 16px;
  margin: 0px 0px 35px 20px;
}
.operation_cards {
  flex-direction: column;
  align-items: center;
  padding-left: 20px;
}
.operation_cards_card {
  display: flex;
  align-items: center;
  background-color: rgba(231, 231, 231, 0.3843137255);
  height: 77px;
  width: 95%;
  margin-bottom: 20px;
  box-shadow: 1px 2px 20px rgba(167, 167, 167, 0.5);
  border-radius: 30px;
  font-size: 14px;
  cursor: default;
  /* property name | duration | easing function */
  transition: transform 250ms ease-in-out;
}
.operation_cards_card:hover {
  transform: scale(1.01);
  background-color: rgba(146, 86, 220, 0.1294117647);
}
.operation_cards_card:hover .operation_cards_card_icon {
  color: #9356DC;
}
.operation_cards_card_number {
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 35px;
  height: 35px;
  margin-left: -20px;
  color: white;
  background-color: #9356DC;
  border-radius: 30px;
}
.operation_cards_card_icon {
  color: rgba(0, 0, 0, 0.5);
  padding: 0px 20px;
  font-size: 25px;
}
.operation_cards_card_title {
  padding-right: 5px;
}

/* --fin code OPERATION (Fonctionnement)-------------------------------------*/
/*-- code RESTAURANTS ------------------------------------------------------*/
.restaurants {
  background-color: #F2F2F2;
  margin-top: 40px;
  padding: 10px 0px 50px 0px;
}
.restaurants_header_title {
  padding: 30px 0px 30px 30px;
  font-size: 24px;
}
.restaurants_cards {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  align-content: center;
}
.restaurants_card {
  position: relative;
  margin: 10px 0px 20px 0px;
  border-radius: 20px;
  box-shadow: 0 0 16px rgba(0, 0, 0, 0.1803921569);
  box-sizing: border-box;
  background-color: white;
  width: 95%;
  transition: transform 250ms ease-in-out;
}
.restaurants_card:hover {
  transform: scale(1.01);
}
.restaurants_card_fig {
  margin: 0;
}
.restaurants_card_fig_img {
  object-fit: cover;
  border-radius: 20px 20px 0px 0px;
  width: 100%;
  height: 250px;
}
.restaurants_card_fig_caption {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  position: relative;
  margin: 0;
  padding: 0px 0px 5px 25px;
  line-height: 10px;
}
.restaurants_icons {
  /*position: absolute :pour superposer les icons lun sur lautr*/
  position: absolute;
  bottom: 1.9rem;
  right: 2.3rem;
  width: 26px;
  margin-top: -20px;
}

.icons {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  font-size: 25px;
  /*pour le romplissage*/
}
.icons input[type=checkbox]:checked ~ .icons-liked {
  display: inline-block;
  opacity: 1;
}
.icons input[type=checkbox]:checked ~ .icons-notLiked {
  display: none;
}
.icons:hover .icons-liked {
  opacity: 1;
}
.icons-notLiked {
  position: absolute;
}
.icons-liked {
  position: relative;
  background: linear-gradient(160deg, rgb(255, 121, 218) 0%, rgb(147, 86, 220) 100%);
  /*La propriété CSS définit si l'arrière-plan d'un élément s'étend sous sa zone de bordure, 
  sa zone de remplissage ou sa zone de contenu.background-clip*/
  /*pour Firefox*/
  background-clip: text;
  /*pour Chrome*/
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  transition: opacity 500ms ease-in-out;
  opacity: 0;
}

.new {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  font-size: 18px;
  margin: 0;
  padding: 5px 10px;
  border-radius: 4px;
  color: #4d7052;
  z-index: 40;
  background-color: #99E2D0;
}

/* <!-- fin code RESTAURANTS ---------------------------------------------------------------> */
/* --code FOOTER --------------------------------------------------*/
.footer {
  background-color: #313131;
  padding-bottom: 20px;
}
.footer_logo {
  filter: invert(100%);
  width: 130px;
  padding: 23px 0px 1px 25px;
  min-width: 140px;
}
.footer_links {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  margin-left: 10px;
  padding: 0;
  padding-inline-start: 20px;
}
.footer_link {
  color: white;
  line-height: 30px;
}
.footer_link:hover {
  text-decoration: underline;
}
.footer_link_icon {
  margin-right: 5px;
}
.footer_link .fa-utensils {
  font-size: 19px;
  margin-right: 10px;
}

/* --fin code FOOTER -----------------------------------------------------*/
/*fin code PAGE principal*/
/* /*code des page menu------------------------------------------ */
@keyframes itemAppear {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0px);
    opacity: 1;
  }
}
/* --code HEADER ---------------------------------------*/
.header_icon {
  position: relative;
  left: 20px;
  font-size: 20px;
  color: rgb(32, 32, 32);
}
.header_icon:hover {
  color: #99E2D0;
}

/* --fin code HEADER ---------------------------------------*/
/*-- code BANNER (banderole image-restaurants)------------------*/
.banner_img {
  object-fit: cover;
  width: 100%;
  height: 370px;
}

.icons {
  font-size: 23px;
}

/*-- code BANNER (banderole image-restaurants)----------------- */
/*!--code MENU ----------------------------------------- */
.menu {
  background-color: #F2F2F2;
  position: relative;
  z-index: 5;
  border-radius: 40px 40px 0px 0px;
  margin-top: -40px;
  padding-bottom: 20px;
}
.menu_header {
  display: flex;
  justify-content: space-between;
  padding-top: 0;
  margin-bottom: 20px;
}
.menu_header_title {
  font-family: "Shrikhand", serif;
  margin-left: 20px;
  font-size: 30px;
}
.menu_header_icons {
  margin-right: 30px;
}
.menu_categories {
  display: flex;
  flex-direction: column;
}
.menu_title {
  align-self: flex-start;
  padding: 0px 17px;
  line-height: 0;
}
.menu_title_underline {
  align-self: flex-start;
  width: 50px;
  height: 3px;
  margin: 5px 0px 10px 18px;
  background-color: #99E2D0;
}
.menu_cards {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  margin-bottom: 20px;
}
.menu_card {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: white;
  border-radius: 20px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.0862745098);
  margin: 10px 0px;
  width: 95%;
  height: 80px;
  overflow: hidden;
  cursor: pointer;
  transform: scale(0);
  animation: itemAppear 500ms ease-in-out;
  animation-fill-mode: forwards;
}
.menu_card:hover .menu_card_price {
  margin-right: 25%;
}
.menu_card:hover .menu_card_check {
  position: absolute;
  right: 0rem;
}
.menu_card:hover .menu_card_check_icon {
  transform: rotate(0deg);
}
.menu_card_titles {
  display: flex;
  flex-direction: column;
  height: auto;
  overflow: hidden;
}
.menu_card_titles p, .menu_card_titles h4 {
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin: 5px 20px;
}
.menu_card_price {
  padding-right: 25px;
  transition-duration: 1200ms;
}
.menu_card_check {
  position: absolute;
  right: -13rem;
  align-items: center;
  display: flex;
  justify-content: center;
  background-color: #99E2D0;
  height: 80px;
  width: 25%;
  transition-duration: 1200ms;
}
.menu_card_check_icon {
  color: white;
  font-size: 28px;
  transform: rotate(360deg);
  transition-duration: 800ms;
  transition-delay: 500ms;
}

.delay_0 {
  animation-delay: 0s;
}

.delay_1 {
  animation-delay: 0.1666666667s;
}

.delay_2 {
  animation-delay: 0.3333333333s;
}

.delay_3 {
  animation-delay: 0.5s;
}

.delay_4 {
  animation-delay: 0.6666666667s;
}

.delay_5 {
  animation-delay: 0.8333333333s;
}

.delay_6 {
  animation-delay: 1s;
}

.delay_7 {
  animation-delay: 1.1666666667s;
}

.delay_8 {
  animation-delay: 1.3333333333s;
}

.command {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 20px 0px 35px 0px;
}
.command_link {
  width: 200px;
  height: 50px;
  font-size: 20px;
}

/*--fin code MENU -----------------------------------------*/
/* fin PAGE MENU */
@media screen and (min-width: 768px) and (max-width: 1100px) {
  .operation_cards {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding-left: 50px;
  }
  .operation_cards_card {
    width: 45%;
    font-size: 16px;
    margin-bottom: 20px;
    box-shadow: 1px 2px 20px rgba(167, 167, 167, 0.5);
  }
  .restaurants_card_fig_img {
    height: 300px;
  }
  .restaurants_card {
    width: 47%;
  }
  .header_icon {
    font-size: 20px;
  }
  .menu_header {
    justify-content: space-between;
  }
  .menu_header_title {
    margin-left: 35%;
  }
  .menu_categories {
    flex-wrap: wrap;
  }
  .menu_cards {
    width: 60%;
    padding-left: 20%;
  }
  .menu_card {
    margin: 10px 0px;
  }
}
@media screen and (min-width: 1100px) {
  .operation_cards {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    padding-left: 10px;
  }
  .operation_cards_card {
    font-size: 17px;
    margin-bottom: 20px;
    width: 25%;
    height: 86px;
    box-shadow: 2px 5px 20px rgba(167, 167, 167, 0.5);
  }
  .center {
    min-width: 1100px;
    margin: auto;
  }
  .restaurants_card_fig_img {
    height: 300px;
  }
  .restaurants_card {
    width: 47%;
    margin-left: 15px;
    margin-right: 15px;
  }
  .header_icon {
    font-size: 20px;
  }
  .menu_header {
    justify-content: space-between;
  }
  .menu_header_title {
    margin-left: 38%;
  }
  .menu_categories {
    flex-wrap: wrap;
  }
  .menu_cards {
    width: 46%;
    padding-left: 24%;
  }
  .menu_card {
    margin: 10px 0px;
  }
  .footer_links {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    padding-top: 10px;
    padding-inline-start: 0;
  }
}

/*# sourceMappingURL=mobile.css.map */
